/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package jedis

import redis.clients.jedis.Jedis
import redis.clients.jedis.JedisPubSub


class App {
    val greeting: String
        get() {
            return "Hello world."
        }
}

fun main(args: Array<String>) {
    println(App().greeting)

    val jedis = Jedis("red_host", 6379)
    jedis.select(4)
    println("Ping: " + jedis.ping())

    jedis.apply {
        jedis.lpush("test-list", "Java")
        jedis.lpush("test-list", "PHP")
        jedis.lpush("test-list", "C++")

        val listCache = jedis.lrange("test-list", 0, 3)
        for (i in listCache.indices) {
            println("OUTï¼š" + listCache[i])
        }
        jedis.del("test-list")
    }

    jedis.set("good", "day")
    println(jedis.get("good"))
    jedis.del("good")

    if (null == jedis.get("fakekey")) {
        println("Good: Null")
    }

    jedis.apply {
        jedis.sadd("set1", "v1")
        jedis.sadd("set1", "v2")
        jedis.sadd("set1", "v3")
        val s1Ret = jedis.smembers("set1")
        s1Ret.forEach {
            println(it)
        }
    }

    jedis.subscribe(object : JedisPubSub() {
        override fun onMessage(channel: String?, message: String?) {
            super.onMessage(channel, message)
            println("Channel: [$channel], msg: [$message]")
        }
    }, "listingid")

    println("Done")
}
